- set_fact:
    python: {}

- name: install suggested build environment
  become: yes
  apt:
    name:             '{{ suggest_packages }}'
    update_cache:     yes
    cache_valid_time: 3600
  vars:
    suggest_packages:
      - build-essential
      - curl
      - libbz2-dev
      - libffi-dev
      - liblzma-dev
      - libncurses5-dev
      - libreadline-dev
      - libsqlite3-dev
      - libssl-dev
      - libxml2-dev
      - libxmlsec1-dev
      - llvm
      - make
      - tk-dev
      - wget
      - xz-utils
      - zlib1g-dev

- name: check pyenv
  command: |
    bash -lc 'which pyenv'
  register: which_pyenv
  ignore_errors: yes
  changed_when: False

- name: install pyenv
  command: |
    bash -lc 'anyenv install pyenv'
  when: which_pyenv.rc > 0

- name: get installed versions
  command: |
    bash -lc 'pyenv versions'
  register: installed_versions
  changed_when: False

- name: install python3
  command: |
    bash -lc 'pyenv install {{ item | quote }}'
  when: |
    python.version3 and installed_versions.stdout.find(item) == -1
  with_items: '{{ python.version3 }}'

- name: install python2
  command: |
    bash -lc 'pyenv install {{ item | quote }}'
  when: |
    python.version2 and installed_versions.stdout.find(item) == -1
  with_items: '{{ python.version2 }}'

- name: set global python
  command: |
    bash -lc 'pyenv global {{ python.version3[0] | quote }} {{ python.version2[0] | quote}}'
  when: |
    installed_versions.stdout.find(python.version3[0]) == -1 or installed_versions.stdout.find(python.version2[0]) == -1

- name: rehash
  shell: |
    if [ -f "$DOTSHIM_FILE" ]; then
      rm -f "$DOTSHIM_FILE"
    fi
    bash -lc 'pyenv rehash'
  environment:
    DOTSHIM_FILE: '{{ anyenv.envs_dir }}/pyenv/.pyenv-shim'
  changed_when: False

- name: bash restart
  command: |
    bash -lc 'exec $SHELL -l'
  changed_when: False
