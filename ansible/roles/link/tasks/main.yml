- set_fact:
    link: {}
    
- name: check dir stat
  stat:
    path: '{{ home_path }}/{{ item }}'
  loop_control:
    label: '~/{{ item }}'
  when: item != ""
  with_items: '{{ link.values() | map("dirname") | unique | list}}'
  register: dir_stat
 
# - name: show dir_stat
#   debug: var=dir_stat
 
- name: allocate parent directories
  file:
    dest:    '{{ home_path }}/{{ item.item }}'
    state:   directory
    owner:   '{{ user_name }}'
    group:   '{{ user_name}}'
    recurse: yes
  loop_control:
    label: '~/{{ item.item }}'
  when: item.item != "" and not item.stat.exists
  with_items: '{{ dir_stat.results }}'

- name: check destinations
  stat:
    path: '{{ home_path }}/{{ item.value }}'
  loop_control:
    label: '{{ item.value }}'
  with_dict: '{{ link }}'
  register: dest_stat

- name: create backup files
  command: |
    mv -f \
      {{ home_path | quote }}/{{ item.item.value | quote }} \
      {{ home_path | quote }}/{{ item.item.value | quote }}.bak
  when: item.stat.exists and not item.stat.islnk
  loop_control:
    label: '{{ item.item.value }}'
  with_items: '{{ dest_stat.results }}'

- name: create symlinks
  file:
    src:   '{{ dotfiles_path }}/{{ item.key }}'
    dest:  '{{ home_path }}/{{ item.value }}'
    owner:   '{{ user_name }}'
    group:   '{{ user_name}}'
    state: link
    force: yes
  loop_control:
    label: '{{ item.value }}'
  with_dict: '{{ link }}'
